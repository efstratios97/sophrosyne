openapi: 3.0.3
info:
  title: Sophrosyne - DynamicAction Service API
  description: |-
    This API document describes the available Sophrosyne DynamicAction Service APIs
  termsOfService: TBD
  contact:
    email:
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.1.0
externalDocs:
  description: Sophrosyne Core docs
  url: TBD
tags:
  - name: dynamic action
    description: Sophrosyne dynamic action operation
paths:
  /int/user/dynamicaction:
    post:
      tags:
        - dynamic_action
      summary: Create dynamic action
      description: This can only be done by the logged in user with admin rights.
      operationId: createDynamicAction
      requestBody:
        description: Creates dynamic action
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicAction'
      responses:
        '200':
          description: successful operation
        '401':
          description: Unauthorized
  /int/user/dynamicactions:
    get:
      tags:
        - dynamic_action
      summary: Get all actions
      description: ''
      operationId: getDynamicActions
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DynamicAction'
        '401':
          description: Unauthorized
  /int/user/dynamicaction/{id}:
    get:
      tags:
        - dynamic_action
      summary: Get dynamic action by id
      description: ''
      operationId: getDynamicActionById
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicAction'
        '400':
          description: Invalid id supplied
        '401':
          description: Unauthorized
        '404':
          description: DynamicAction not found
    put:
      tags:
        - dynamic_action
      summary: Update dynamic action
      operationId: updateDynamicAction
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicAction'
      responses:
        default:
          description: successful operation
        '401':
          description: Unauthorized
        '404':
          description: Apikey not found
    delete:
      tags:
        - dynamic_action
      summary: Delete dynamic action
      operationId: deleteDynamicAction
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched'
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid id supplied
        '401':
          description: Unauthorized
        '404':
          description: DynamicAction not found
  /int/client/dynamicaction/{id}/parameters:
    get:
      tags:
        - dynamic_action
      summary: Get dynamic action's dynamic parameters parsed by id
      description: ''
      operationId: getDynamicActionParsedParameters
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsedDynamicParameters'
        '400':
          description: Invalid id supplied
        '401':
          description: Unauthorized
        '404':
          description: DynamicAction not found
  /int/client/dynamicaction/{id}/commandpreview:
    post:
      tags:
        - dynamic_action
      summary: Get dynamic action's command preview by id
      description: ''
      operationId: getDynamicActionCommandPreview
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched'
          required: true
          schema:
            type: string
      requestBody:
        description: Creates command preview from ParsedDynamicParameters
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid id supplied
        '401':
          description: Unauthorized
        '404':
          description: DynamicAction not found
components:
  schemas:
    DynamicAction:
      type: object
      properties:
        id:
          type: string
          example: id_1
        name:
          type: string
          example: AnsibleDeployment
        description:
          type: string
          example: This starts the deployment of your data center with Ansible
        command:
          type: string
          example: ansible-playbook
        dynamicParameters:
          type: string
          example: -i {{inventory}} {{playbook}}
        version:
          type: string
          example: v.1.2.3
        postExecutionLogFilePath:
          type: string
          example: /etc/ansible/ansible.log
        allowedApikeys:
          type: array
          items:
            type: string
        requiresConfirmation:
          type: int
          example: 1
        keepLatestConfirmationRequest:
          type: int
          example: 1
        runningId:
          type: string
        muted:
          type: int
          example: 1
      required:
        - name
        - command
        - dynamicParameters
    ParsedDynamicParameters:
      type: object
      properties:
        parameters:
          type: array
          items:
            type: string
    DynamicParametersStringPreview:
      type: object
      properties:
        dynamicParametersString:
          type: string
